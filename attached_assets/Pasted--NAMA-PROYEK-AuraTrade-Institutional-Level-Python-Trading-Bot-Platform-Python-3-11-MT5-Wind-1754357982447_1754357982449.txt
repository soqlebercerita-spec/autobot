💼 NAMA PROYEK:
AuraTrade – Institutional-Level Python Trading Bot
Platform: Python 3.11+, MT5, Windows
Tujuan: Trading otomatis, high win rate, HFT-ready, auto risk control, multi-symbol, no TA-Lib.

🚀 FITUR WAJIB
🔴 PHASE 1 - CRITICAL FIXES
✅ Fix bug error strength (bot tidak bisa eksekusi)

✅ Tambah True HFT Engine (latensi <1ms)

✅ Semua eksekusi full otomatis (set & forget)

🟡 PHASE 2 - HIGH IMPACT ADDITIONS
✅ News Sentiment Analysis (tanpa API berbayar)

✅ Multi-Symbol Trading (GOLD, EURUSD, BTC, dll)

✅ Dynamic Risk Management (exposure adaptif)

🟢 PHASE 3 - PERFORMANCE ENHANCEMENTS
✅ Machine Learning (LSTM, CNN) untuk prediksi dan pola

✅ Advanced Order Types (partial fill, smart routing)

✅ GUI + Telegram Alerts untuk real-time monitoring

📊 STRATEGI & LOGIKA BOT
🧠 Multi-Layer Decision Engine:
HFT Layer (<1ms): Market making, order book, arbitrage

Technical Layer (1-8s): RSI, MACD, MA crossover, pattern

Fundamental Layer (1-5m): News sentiment, exposure, portfolio correlation

Multi-Timeframe Logic: Entry di M15, exit kalau H1/H4 reversal

🎯 Kombinasi Entry:
RSI < 30 + Bullish Pattern → Buy

RSI > 70 + Bearish Pattern → Sell

🔐 RISK MANAGEMENT (TP/SL PERSENTASE MODAL) ✅
Semua Take Profit (TP) dan Stop Loss (SL) dihitung berdasarkan persentase dari total modal (balance/equity).

Contoh:

Modal = $10,000

SL = 0.5% → max loss = $50

TP = 1.5% → target profit = $150

Lot size dan pips akan dihitung otomatis agar sebanding dengan nilai $ tersebut

🎯 Ini membuat:

Risiko per trade konsisten

Lebih fleksibel untuk berbagai pair (GOLD, FX, crypto)

Otomatis menyesuaikan leverage & volatilitas

🔢 INDIKATOR TANPA TA-LIB
Semua indikator teknikal harus dibuat custom pakai numpy dan pandas. Dilarang pakai TA-Lib.

Moving Averages (SMA, EMA, WMA)

RSI (custom rolling)

Bollinger Bands (std dev)

MACD (custom EMA)

Stochastic Oscillator

ATR (true range)

Support/Resistance (dynamic)

Volume Analysis (custom)

🗂️ STRUKTUR FOLDER PROYEK
bash
Copy
Edit
AuraTrade/
│
├── bot.py                    # Entry point utama
├── config/
│   ├── config.py             # Konfigurasi umum
│   ├── credentials.py        # Simpan login info
│   └── settings.py           # Parameter trading
│
├── core/
│   ├── trading_engine.py     # Orkestrasi utama
│   ├── mt5_connector.py      # Integrasi MT5
│   ├── order_manager.py      # Eksekusi order
│   ├── risk_manager.py       # Risk control, SL/TP dari % balance
│   ├── position_sizing.py    # Hitung ukuran lot
│   └── ml_engine.py          # Neural nets & prediksi
│
├── strategies/
│   ├── hft_strategy.py       # Market making, arbitrage
│   ├── scalping_strategy.py
│   └── arbitrage_strategy.py
│
├── analysis/
│   ├── technical_analysis.py     # SMA, RSI, dll
│   ├── pattern_recognition.py   # Bullish/bearish patterns
│   ├── market_conditions.py     # Trend & regime analysis
│   └── sentiment_analyzer.py    # NLP dari news/sosmed
│
├── data/
│   └── data_manager.py       # Feed MT5 + Binance websocket
│
├── gui/
│   ├── main_window.py
│   ├── charts.py
│   └── dashboard.py
│
└── utils/
    ├── logger.py
    └── notifier.py           # Telegram alerts
📈 TARGET KINERJA
✅ Win rate > 90%

✅ Max Drawdown < 5%

✅ Daily ROI 2-5%, Monthly ROI 20-50%

✅ Auto compound + position scaling

✅ 300+ scalping trades/hari

📬 NOTIFIKASI REAL-TIME
Telegram Alerts → Trade Open, TP Hit, SL Hit, Risk Warning

GUI Dashboard → Portfolio equity, win rate, open trades

Emergency Auto-Close → Jika news besar/volatilitas ekstrem

📎 CATATAN TAMBAHAN
✅ Harus bisa run di Windows 10/11 langsung (python bot.py)

✅ Auto connect ke MT5 (no manual login)

✅ Semua strategi dan logika harus modular

✅ Fokus performa dan stabilitas real-time

✅ Siap untuk real account, bukan simulasi

✅ INSTRUKSI UNTUK AI (REPLIT)
“Buatkan saya sistem trading bot Python dengan struktur di atas. Fitur wajib: HFT, full automation, TP/SL berdasarkan % modal, multi-symbol, GUI, dan tanpa TA-Lib. Semua indikator harus custom coded. Gunakan MT5 sebagai eksekusi. Mulai dari struktur & modul utama agar bisa langsung run.”